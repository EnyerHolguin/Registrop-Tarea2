@page "/Registro"
@using RegistroP.Controllers;
@using RegistroP.Models;
@inject PersonasController PersonasController ; 

<div class="container text-center">
    <EditForm Model="Persona" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <head>
            <h3>Registro de personas</h3>
            <br />
        </head>
        
        <body>
            <div class="form-group">
                <div class="form-inline">
                    <label for="PersonaId" class="col-4">Codigo de la Persona:</label>
                    <InputNumber @bind-Value="Persona.PersonaId" class="form-control col-3" />
                    <button type="button" class="btn btn-outline-dark" @onclick="Buscar" style="margin: 5px">Buscar</button>
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Nombre" class="col-4">Nombre:</label>
                    <InputText @bind-Value="Persona.Nombre" class="form-control col-4" />
                    <ValidationMessage For="@(() => Persona.Nombre)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Telefono" class="col-4">Telefono:</label>
                    <InputText @bind-Value="Persona.Telefono" class="form-control col-4" />
                    <ValidationMessage For="@(() => Persona.Telefono)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Cedula" class="col-4">Cedula:</label>
                    <InputText @bind-Value="Persona.Cedula" class="form-control col-4" />
                    <ValidationMessage For="@(() => Persona.Cedula)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Telefono" class="col-4">Direccion:</label>
                    <InputText @bind-Value="Persona.Direccion" class="form-control col-4" />
                    <ValidationMessage For="@(() => Persona.Direccion)" />
                </div>
            </div>

            <div class="form-group">
                <div class="form-inline">
                    <label for="Telefono" class="col-4">Direccion:</label>
                    <InputDate @bind-Value="Persona.FechaNacimiento" class="form-control col-4" />
                    <ValidationMessage For="@(() => Persona.FechaNacimiento)" />
                </div>
            </div>

            <h3>@Mensaje</h3>

            <div>
                <button type="button" class="btn btn-outline-primary" @onclick="Limpiar" style="margin: 5px">Limpiar</button>
                <button type="submit" class="btn btn-outline-success" style="margin: 5px">Guardar</button>
                <button type="button" class="btn btn-outline-danger" @onclick="Eliminar" style="margin: 5px">Eliminar</button>
            </div>

        </body>
            
        <footer>
            <h5>Realizado por Enyer Holguin - 2015-0158</h5>
        </footer>

    </EditForm>
</div>






@code {
    Personas Persona = new Personas();
    string Mensaje = string.Empty;

    private void Guardar()
    {

        PersonasController personasController = new PersonasController();

        try
        {
            if (personasController.Insertar(Persona))
            {

                Mensaje = "La Persona se guardo de manera exitosa!...";
            }
            else
            {

                Mensaje = "La Persona no se guardo de manera exitosa!...";
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    private void Buscar()
    {

        PersonasController personasController = new PersonasController();

        try
        {
            Personas Temporal = new Personas();
            Temporal = personasController.Buscar(Persona.PersonaId);

            if (Temporal != null)
            {
                Persona = Temporal;
                Mensaje = "Persona encontrada de manera exitosa!...";
            }
            else
            {

                Mensaje = "La Persona no pudo ser encontrada!...";
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    private void Eliminar()
    {

        PersonasController personasController = new PersonasController();

        try
        {
            Personas Temporal = new Personas();
            Temporal = personasController.Buscar(Persona.PersonaId);

            if (Temporal == null)
            {

                Mensaje = "No se puede eliminar una persona que no existe!...";
            }
            else
            {

                if (personasController.Eliminar(Persona.PersonaId))
                {
                    Mensaje = "La persona fue eliminada de manera exitosa";
                    Limpiar();
                }
                else
                {

                    Mensaje = "La persona no pudo ser eliminada de manera exitosa";
                }
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    private void Limpiar()
    {

        Persona = new Personas();
        Mensaje = string.Empty;
    }


}
